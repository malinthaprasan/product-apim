{
  "name": "WSO2 API Manager",
  "tagline": "",
  "body": "        ================================================================================\r\n                                        WSO2 API Manager\r\n        ================================================================================\r\n\r\n---\r\n\r\n| Branch | Build Status |\r\n| :------------ |:-------------\r\n| master | [![Build Status](https://wso2.org/jenkins/job/product-apim/badge/icon)](https://wso2.org/jenkins/job/product-apim) |\r\n\r\n[![Join the chat at https://gitter.im/wso2/product-apim](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/wso2/product-apim?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\r\n---\r\n\r\nWSO2 API Manager is a powerful platform for creating, managing, consuming and\r\nmonitoring web APIs. It combines tried and tested SOA best practices with modern\r\nday API management principles to solve a wide range of enterprise challenges\r\nassociated with API provisioning, governance and integration.\r\n\r\nWSO2 API Manager consists of several loosely coupled modules.\r\n\r\n        * API publisher\r\n        * API store\r\n        * API gateway\r\n\t    * API Key Manager\r\n\r\nThe API publisher module allows API publishers to easily define APIs and manage them\r\nusing a strong governance model which consists of well-established concepts such as\r\nversioning and lifecycles. API consumers can use the API store module to discover\r\npublished, production-ready APIs and access them in a secure and reliable manner\r\nusing unique API keys.  The built-in API gateway module provides powerful tools to\r\nsecure and control the load on individual APIs.\r\n\r\nWSO2 API Manager is based on the revolutionary WSO2 Carbon [Middleware a' la carte]\r\nframework. All the major features have been developed as reusable Carbon\r\ncomponents.\r\n\r\nTo learn more about WSO2 API Manager please visit http://wso2.com/products/api-manager.\r\n\r\nKey Features\r\n=============\r\n\r\n* Design and Prototype APIs:        \r\n            - Design APIs, gather developer's feedback before implementing (API First Design).\r\n            - Design can be done from the publishing interface or via importing an existing swagger definition\r\n            - Deploy a prototyped API, provide early access to APIs, and get early feedback.\r\n            - Mock API implementation using Javascript.\r\n            - Support publishing SOAP, REST, JSON and XML style services as XML.     \r\n    \r\n* Create a Store of all Available APIs:        \r\n            - Graphical experience similar to Android Marketplace or Apple App Store.\r\n            - Browse APIs by provider, tags or name.\r\n            - Self-registration to developer community to subscribe to APIs.\r\n            - Subscribe to APIs and manage subscriptions on per-application basis.\r\n            - Subscriptions can be at different service tiers based on expected usage levels.\r\n            - Role based access to API Store; manage public and private APIs.\r\n            - Manage subscriptions at a per-developer level.\r\n            - Browse API documentation, download helpers for easy consumption.\r\n            - Comment on and rate APIs.\r\n            - Forum for discussing API usage issues (Available soon in future version).\r\n            - Try APIs directly on the store front.\r\n            - Internationalization (i18n) support.    \r\n    \r\n* Publishing and Governing API Use:     \r\n            - Publish APIs to external consumers and partners, as well as internal users.\r\n            - Supports publishing multiple protocols including SOAP, REST, JSON and XML style services as APIs.\r\n            - Manage API versions and deployment status by version.\r\n            - Govern the API lifecycle (publish, deprecate, retire).\r\n            - Attach documentation (files, external URLs) to APIs.\r\n            - Provision and Manage API keys.\r\n            - Track consumers per API.\r\n            - One-click deployment to API Gateway for immediate publishing.\r\n        \r\n* Control Access and Enforce Security:  \r\n\t    - Apply Security policies to APIs (authentication, authorization).\r\n            - Rely on OAuth2 standard for API access (implicit, authorization code, client, SAML, IWA Grant type).\r\n            - Restrict API access tokens to domains/IPs\r\n            - Block a subscription and restrict a complete application.\r\n            - Associate API available to system defined service tiers.\r\n            - Leverage XACML for entitlements management and fine grained authorization.\r\n            - Configire Single Sign-On (SSO) using SAML 2.0 for easy integartion with existing web apps.\r\n            - Powered by WSO2 Enterprise Service Bus.\r\n        \r\n* Route API Traffic:\r\n            - Supports API authentication with OAuth2.\r\n            - Extremely high performance pass-through message routing with sub-millisecond latency.\r\n            - Enforce rate limiting and throttling policies for APIs by consumer.\r\n            - Horizontally scalable with easy deployment into cluster using proven routing infrastructure.\r\n            - Scales to millions of developers/users.\r\n            - Capture all statistics and push to pluggable analytics system.\r\n            - Configure API routing policies with capabilities of WSO2 Enterprise Service Bus.\r\n            - Powered by WSO2 Enterprise Service Bus.            \r\n\r\n* Manage Developer Community:        \r\n            - Self-sign up for API consumption.\r\n            - Manage user account including password reset.\r\n            - Developer interaction with APIs via comments and ratings.\r\n            - Support for developer communication via forums (Available soon in future version).\r\n            - Powered by WSO2 Identity Server.\r\n        \r\n* Govern Complete API Lifecycle:        \r\n            - Manage API lifecycle from cradle to grave: create, publish, block, deprecate and retire.\r\n            - Publish both production and sandbox keys for APIs to enable easy developer testing.\r\n            - Publish APIs to partner networks such as ProgrammableWeb (Available soon in future version).\r\n            - Powered by WSO2 Governance Registry.\r\n        \r\n* Monitor API Usage and Performance:        \r\n            - All API usage published to pluggable analytics framework.\r\n            - Out of the box support for WSO2 Business Activity Monitor and Google Analytics.\r\n            - View metrics by user, API and more.\r\n            - Customized reporting via plugging reporting engines.\r\n            - Monitor SLA compliance.\r\n            - Powered by WSO2 Business Activity Monitor.      \r\n    \r\n* Pluggable, Extensible and Themeable:        \r\n            - All components are highly customizable thru styling, theming and open source code.\r\n            - Storefront implemented with Jaggery (jaggeryjs.org) for easy customization.\r\n            - Pluggable to third party analytics systems and billing systems (Available soon in future version).\r\n            - Pluggable to existing user stores including via JDBC and LDAP.\r\n            - Components usable separately - storefront can be used to front APIs gatewayed via third party gateways such as Intel Expressway Service Gateway.\r\n            - Support for Single Sign On (SSO) using SAML 2.0 for easy integration with existing web apps\r\n        \r\n* Easily Deployable in Enterprise Setting:        \r\n            - Role based access control for managing users and their authorization levels.\r\n            - Store front can be deployed in DMZ for external access with Publisher inside the firewall for private control.\r\n            - Different user stores for developer focused store-front and internal operations in publisher.\r\n            - Integrates with enterprise identity systems including LDAP and Microsoft Active Directory.\r\n            - Gateway can be deployed in DMZ with controlled access to WSO2 Identity Server (for authentication/authorization) and governance database behind firewall.\r\n\r\n* Support for creating multi-tenanted APIs        \r\n            - Run a single instance and provide API Management to multiple customers\r\n            - Share APIs between different departments in a large enterprise\r\n        \r\n* Publishing and Governing API Use        \r\n            - Document an API using Swagger\r\n            - Restrict API Access tokens to domains/IPs\r\n            - Ability to block a subscription and restricting a complete application\r\n            - Ability to revoke access tokens\r\n            - Separate validity period configuration for Application Access Token\r\n            - OAuth2 Authorization Code Grant Type Support\r\n            - Configuring execution point of mediation extensions\r\n        \r\n* Monitor API Usage and Performance        \r\n            - Improved dashboard for monitoring usage statistics (Filtering data for a date range, More visually appealing widgets)       \r\n    \r\n\r\nSystem Requirements\r\n==================================\r\n\r\n1. Minimum memory - 2GB\r\n2. Processor      - Pentium 800MHz or equivalent at minimum\r\n3. Java 1.7 or higher\r\n4. The Management Console requires you to enable Javascript of the Web browser,\r\n   with MS IE 6 and 7. In addition to JavaScript, ActiveX should also be enabled\r\n   with IE. This can be achieved by setting your security level to\r\n   medium or lower.\r\n5. To compile and run the sample clients, an Ant version is required. Ant 1.7.0\r\n   version is recommended\r\n6. To build WSO2 API Manager from the Source distribution, it is necessary that you have\r\n   JDK 1.7 version and Maven 3.0.4 or later\r\n\r\nInstallation & Running\r\n==================================\r\n\r\n1. Extract the wso2am-2.0.0.zip and go to the 'bin' directory\r\n2. Run the wso2server.sh or wso2server.bat as appropriate\r\n3. API Publisher web application is running at http://localhost:9763/publisher. You may login\r\n   to the Publisher using the default administrator credentials (user: admin, pass: admin).\r\n4. API Store web application is running at http://localhost:9763/store. You may login\r\n   to the Store using the default administrator credentials (user: admin, pass: admin).\r\n\r\nDocumentation\r\n==============\r\n\r\nOn-line product documentation is available at:\r\n        http://docs.wso2.org/wiki/display/AM200/WSO2+API+Manager+Documentation\r\n\r\nSupport\r\n==================================\r\n\r\nWSO2 Inc. offers a variety of development and production support\r\nprograms, ranging from Web-based support up through normal business\r\nhours, to premium 24x7 phone support.\r\n\r\nFor additional support information please refer to http://wso2.com/support\r\n\r\nFor more information on WSO2 API Manager please visit http://wso2.com/products/api-manager\r\n\r\nKnown issues of WSO2 API Manager\r\n==================================\r\n\r\nAll known issues of WSO2 API Manager are filed at:\r\n\r\n    https://wso2.org/jira/issues/?filter=12237\r\n\r\nIssue Tracker\r\n==================================\r\n\r\nHelp us make our software better. Please submit any bug reports or feature\r\nrequests through the WSO2 JIRA system:\r\n\r\n    https://wso2.org/jira/browse/APIMANAGER\r\n\r\n\r\nCrypto Notice\r\n==================================\r\n\r\n   This distribution includes cryptographic software.  The country in\r\n   which you currently reside may have restrictions on the import,\r\n   possession, use, and/or re-export to another country, of\r\n   encryption software.  BEFORE using any encryption software, please\r\n   check your country's laws, regulations and policies concerning the\r\n   import, possession, or use, and re-export of encryption software, to\r\n   see if this is permitted.  See <http://www.wassenaar.org/> for more\r\n   information.\r\n\r\n   The U.S. Government Department of Commerce, Bureau of Industry and\r\n   Security (BIS), has classified this software as Export Commodity\r\n   Control Number (ECCN) 5D002.C.1, which includes information security\r\n   software using or performing cryptographic functions with asymmetric\r\n   algorithms.  The form and manner of this Apache Software Foundation\r\n   distribution makes it eligible for export under the License Exception\r\n   ENC Technology Software Unrestricted (TSU) exception (see the BIS\r\n   Export Administration Regulations, Section 740.13) for both object\r\n   code and source code.\r\n\r\n   The following provides more details on the included cryptographic\r\n   software:\r\n\r\n   Apache Rampart   : http://ws.apache.org/rampart/\r\n   Apache WSS4J     : http://ws.apache.org/wss4j/\r\n   Apache Santuario : http://santuario.apache.org/\r\n   Bouncycastle     : http://www.bouncycastle.org/\r\n\r\n--------------------------------------------------------------------------------\r\n(c) Copyright 2015 WSO2 Inc.\r\n",
  "note": "Don't delete this file! It's used internally to help with page regeneration."
}